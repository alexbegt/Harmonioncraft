package Harmonioncraft.common.dimension;

import net.minecraft.src.GenLayer;
import net.minecraft.src.IntCache;

public class GenLayerHMCBiomeBorders extends GenLayer {
	
    public GenLayerHMCBiomeBorders(long var1, GenLayer var3)
    {
        super(var1);
        this.parent = var3;
    }

    /**
     * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
     * amounts, or biomeList[] indices based on the particular GenLayer subclass.
     */
    public int[] getInts(int var1, int var2, int var3, int var4)
    {
        int var5 = var1 - 1;
        int var6 = var2 - 1;
        int var7 = var3 + 2;
        int var8 = var4 + 2;
        int[] var9 = this.parent.getInts(var5, var6, var7, var8);
        int[] var10 = IntCache.getIntCache(var3 * var4);

        for (int var11 = 0; var11 < var4; ++var11)
        {
            for (int var12 = 0; var12 < var3; ++var12)
            {
                int var13 = var9[var12 + 0 + (var11 + 1) * var7];
                int var14 = var9[var12 + 2 + (var11 + 1) * var7];
                int var15 = var9[var12 + 1 + (var11 + 0) * var7];
                int var16 = var9[var12 + 1 + (var11 + 2) * var7];
                int var17 = var9[var12 + 1 + (var11 + 1) * var7];

                if (this.onBorder(HMCBiomeBase.HMCLake.biomeID, var17, var13, var14, var15, var16))
                {
                    var10[var12 + var11 * var3] = HMCBiomeBase.lakeBorder.biomeID;
                }
                else if (this.onBorder(HMCBiomeBase.clearing.biomeID, var17, var13, var14, var15, var16))
                {
                    var10[var12 + var11 * var3] = HMCBiomeBase.clearingBorder.biomeID;
                }
                else if (this.onBorder(HMCBiomeBase.deepMushrooms.biomeID, var17, var13, var14, var15, var16))
                {
                    var10[var12 + var11 * var3] = HMCBiomeBase.mushrooms.biomeID;
                }
                else if (this.onBorder(HMCBiomeBase.glacier.biomeID, var17, var13, var14, var15, var16))
                {
                    var10[var12 + var11 * var3] = HMCBiomeBase.snow.biomeID;
                }
                else
                {
                    var10[var12 + var11 * var3] = var17;
                }
            }
        }

        return var10;
    }

    boolean onBorder(int var1, int var2, int var3, int var4, int var5, int var6)
    {
        return var2 != var1 ? false : (var3 != var1 && !HMCBiomeBase.isFeature(var3) ? true : (var4 != var1 && !HMCBiomeBase.isFeature(var4) ? true : (var5 != var1 && !HMCBiomeBase.isFeature(var5) ? true : var6 != var1 && !HMCBiomeBase.isFeature(var6))));
    }
}
